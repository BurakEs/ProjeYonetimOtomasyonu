<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /QeSRevnVNCPjAAAAABJRU5ErkJggg==
</value>
  </data>
</root>